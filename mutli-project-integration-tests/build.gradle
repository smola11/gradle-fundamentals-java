buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'com.h2database:h2:1.4.187'
    }
}

plugins {
  id 'org.unbroken-dome.test-sets' version '1.2.0'
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'eclipse-wtp'
  apply plugin: 'idea'
  
  version = '0.1-SNAPSHOT'
  
  repositories {
    jcenter()
  }

  dependencies {
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.9.+'
    testCompile 'commons-logging:commons-logging:1.2'

    compile 'commons-logging:commons-logging:1.2'

  }
}


project(':HibernateRepository') {
    dependencies {
      compile project(':Repository')
    }
}

project(':JacketRepository') {
    dependencies {
      compile project(':HibernateRepository')
    }
}

project(':JacketService') {
    dependencies {
      compile project(':JacketRepository')
    }
}

project(':JacketWeb') {
    dependencies {
      compile project(':JacketService')
    }
}

["JacketRepository", "JacketService", "JacketWeb"].each { name ->
  project(":$name") { 
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'org.flywaydb.flyway'
	
    testSets {
      integrationTest {
	dirName = 'integration-test'
      }
    }
    
    task migrateTest {	
      group = "test"
      description = "Run migration scripts for test"
      doFirst {
	flyway {
	  url = 'jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false'
	  user = 'sa'
	  password = ''
	  schemas = ['jacket']
	  locations = ["filesystem:${rootProject.projectDir}/migrations/common", "filesystem:${rootProject.projectDir}/migrations/h2"]
	  sqlMigrationPrefix = ""
	  baselineOnMigrate = true
	  outOfOrder = true
	}
      }
    }
		
    migrateTest.finalizedBy flywayMigrate  

    check.dependsOn integrationTest

    integrationTest.mustRunAfter test

    
    tasks.withType(Test) {
      reports.html.destination = file("${reporting.baseDir}/${it.name}")
    }
   }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

